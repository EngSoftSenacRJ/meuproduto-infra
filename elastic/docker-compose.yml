#http://stack.desenvolvedor.expert/appendix/docker/compose.html
version: '3.2'

services:
    elasticsearch:
        build:
            context: ./elasticsearch/
            #desnecessário, pois por default já se busca pelo Dockerfile dentro do context:
            dockerfile: Dockerfile
        #args:
            
        volumes:
            - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
        ports:
            - "9200:9200"
            - "9300:9300"
        environment:
            ES_JAVA_OPTS: "-Xmx512m -Xms512m"
            ELASTIC_PASSWORD: meuproduto
            # Use single node discovery in order to disable production mode and avoid bootstrap checks
            # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
            discovery.type: single-node
        networks:
            - elk
    
    logstash:
        build:
            context: ./logstash/
            #desnecessário, pois por default já se busca pelo Dockerfile dentro do context:
            dockerfile: Dockerfile
        #args:
            
        volumes:
            - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
            - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
        ports:
            - "12201:12201/udp"
            - "5000:5000/tcp"
            - "5000:5000/udp"
            - "9600:9600"
        environment:
            LS_JAVA_OPTS: "-Xmx512m -Xms512m"
        networks:
            - elk
        depends_on:
            - elasticsearch
            
    kibana:
        build:
            context: ./kibana/
            #desnecessário, pois por default já se busca pelo Dockerfile dentro do context:
            dockerfile: Dockerfile
        volumes:
            - ./kibana/config:/usr/share/kibana/config:ro
        ports:
            - "5601:5601"
        networks:
            - elk
        depends_on:
            - elasticsearch
            
            
networks:
    elk:
        driver: bridge
        
volumes:
    elasticsearch: